digraph ar2dtool_diagram { 
rankdir=LR;
size="1000"
node [shape = rectangle, color="black"]; "base:AddSubClass" "base:RemoveDomain" "base:DisjointUnionChange" "base:AddEquivalentObjectProperty" "base:ObjectPropertyDomainChange" "base:IrreflexiveObjectPropertyChange" "base:InverseFunctionalObjectPropertyChange" "base:ObjectPropertyChange" "base:AddInverseObjectProperty" "base:RemoveDisjointUnion" "base:RemoveFunctionalDataProperty" "base:AddSubPropertyOf" "base:RemoveInverseFunctionalObjectProperty" "base:ClassChange" "base:DisjointObjectPropertyChange" "base:EquivalentClassChange" "base:AddClass" "base:AddFunctionalDataProperty" "base:AddDatatype" "base:AddDisjointObjectProperty" "base:AddObjectProperty" "base:RenameElement" "base:DisjointDataPropertyChange" "base:RemoveDataPropertyDomain" "base:AddDataPropertyRange" "base:RemoveSubClass" "base:RemoveEquivalentDataProperty" "base:DataPropertyChange" "base:RemoveRange" "base:ReflexiveObjectPropertyChange" "base:RemoveObjectProperty" "base:RemoveReflexiveObjectProperty" "base:AddEquivalentDataProperty" "base:RevokeDeprecate" "base:DisjointClassChange" "base:AddObjectPropertyDomain" "base:EquivalentObjectPropertyChange" "base:AddTransitiveObjectProperty" "base:DomainChange" "base:AddEquivalentClass" "base:AddDataPropertyDomain" "base:PropertyChange" "base:RemoveProperty" "base:RemoveDisjointClass" "base:ObjectPropertyRangeChange" "base:AddIrreflexiveObjectProperty" "base:AddDisjointClass" "base:SubPropertyChange" "base:InverseObjectPropertyChange" "base:AsymmetricObjectPropertyChange" "base:DatatypeChange" "base:RemoveObjectPropertyDomain" "base:RemoveDisjointObjectProperty" "base:AddDisjointUnion" "base:RemoveDataProperty" "base:RemoveClass" "base:AddAsymmetricObjectProperty" "base:RemoveEquivalentClass" "base:RemoveIrreflexiveObjectProperty" "base:DeprecateElement" "base:AddInverseFunctionalObjectProperty" "base:EquivalentDataPropertyChange" "base:AddObjectPropertyRange" "base:SymmetricObjectPropertyChange" "base:RemoveObjectPropertyRange" "base:ElementChange" "base:AddReflexiveObjectProperty" "base:RemoveTransitiveObjectProperty" "base:RemoveSymmetricObjectProperty" "base:AddRange" "base:TransitiveObjectPropertyChange" "base:RemoveDatatype" "base:FunctionalObjectPropertyChange" "base:SubClassChange" "base:RemoveFunctionalObjectProperty" "base:OntologyChange" "base:RemoveSubPropertyOf" "base:RemoveDataPropertyRange" "base:RangeChange" "base:AddDomain" "base:RemoveInverseObjectProperty" "base:FunctionalDataPropertyChange" "base:AddSymmetricObjectProperty" "base:AddDataProperty" "base:RemoveDisjointDataProperty" "base:DataPropertyRangeChange" "base:DataPropertyDomainChange" "base:AddDisjointDataProperty" "base:AddProperty" "base:RemoveAsymmetricObjectProperty" "base:AddFunctionalObjectProperty" "base:RemoveEquivalentObjectProperty" ; /*classes style*/
	"base:ObjectPropertyRangeChange" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddDomain" -> "base:DomainChange" [ label = "rdfs:subClassOf" ];
	"base:AddInverseObjectProperty" -> "base:InverseObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddInverseObjectProperty" -> "base:AddObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:DataPropertyDomainChange" -> "base:DataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddDisjointDataProperty" -> "base:DisjointDataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:SubClassChange" -> "base:ClassChange" [ label = "rdfs:subClassOf" ];
	"base:TransitiveObjectPropertyChange" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:ReflexiveObjectPropertyChange" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveTransitiveObjectProperty" -> "base:TransitiveObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveTransitiveObjectProperty" -> "base:RemoveObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:AddClass" -> "base:ClassChange" [ label = "rdfs:subClassOf" ];
	"base:EquivalentClassChange" -> "base:ClassChange" [ label = "rdfs:subClassOf" ];
	"base:InverseFunctionalObjectPropertyChange" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddProperty" -> "base:PropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveObjectPropertyDomain" -> "base:RemoveDomain" [ label = "rdfs:subClassOf" ];
	"base:RemoveObjectPropertyDomain" -> "base:ObjectPropertyDomainChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveDatatype" -> "base:DatatypeChange" [ label = "rdfs:subClassOf" ];
	"base:ClassChange" -> "base:OntologyChange" [ label = "rdfs:subClassOf" ];
	"base:AddSubClass" -> "base:SubClassChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveObjectPropertyRange" -> "base:RemoveRange" [ label = "rdfs:subClassOf" ];
	"base:RemoveObjectPropertyRange" -> "base:ObjectPropertyRangeChange" [ label = "rdfs:subClassOf" ];
	"base:DisjointDataPropertyChange" -> "base:DataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddTransitiveObjectProperty" -> "base:TransitiveObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddTransitiveObjectProperty" -> "base:AddObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:AddDataPropertyDomain" -> "base:DataPropertyDomainChange" [ label = "rdfs:subClassOf" ];
	"base:AddDataPropertyDomain" -> "base:AddDomain" [ label = "rdfs:subClassOf" ];
	"base:AddDisjointClass" -> "base:DisjointClassChange" [ label = "rdfs:subClassOf" ];
	"base:RangeChange" -> "base:PropertyChange" [ label = "rdfs:subClassOf" ];
	"base:ElementChange" -> "base:OntologyChange" [ label = "rdfs:subClassOf" ];
	"base:AddEquivalentClass" -> "base:EquivalentClassChange" [ label = "rdfs:subClassOf" ];
	"base:SubPropertyChange" -> "base:PropertyChange" [ label = "rdfs:subClassOf" ];
	"base:DataPropertyChange" -> "base:PropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveSymmetricObjectProperty" -> "base:SymmetricObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveSymmetricObjectProperty" -> "base:RemoveObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:FunctionalDataPropertyChange" -> "base:DataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveFunctionalDataProperty" -> "base:FunctionalDataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveEquivalentDataProperty" -> "base:EquivalentDataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddIrreflexiveObjectProperty" -> "base:IrreflexiveObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddIrreflexiveObjectProperty" -> "base:AddObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:RemoveDataPropertyRange" -> "base:RemoveRange" [ label = "rdfs:subClassOf" ];
	"base:RemoveDataPropertyRange" -> "base:DataPropertyRangeChange" [ label = "rdfs:subClassOf" ];
	"base:AddInverseFunctionalObjectProperty" -> "base:InverseFunctionalObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddInverseFunctionalObjectProperty" -> "base:AddObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:DomainChange" -> "base:PropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddFunctionalDataProperty" -> "base:FunctionalDataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveProperty" -> "base:PropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddEquivalentDataProperty" -> "base:EquivalentDataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RevokeDeprecate" -> "base:ElementChange" [ label = "rdfs:subClassOf" ];
	"base:EquivalentObjectPropertyChange" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddSubPropertyOf" -> "base:SubPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveEquivalentObjectProperty" -> "base:RemoveObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:RemoveEquivalentObjectProperty" -> "base:EquivalentObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveClass" -> "base:ClassChange" [ label = "rdfs:subClassOf" ];
	"base:AddAsymmetricObjectProperty" -> "base:AsymmetricObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddAsymmetricObjectProperty" -> "base:AddObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:RemoveIrreflexiveObjectProperty" -> "base:IrreflexiveObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveSubClass" -> "base:SubClassChange" [ label = "rdfs:subClassOf" ];
	"base:FunctionalObjectPropertyChange" -> "base:RemoveObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:FunctionalObjectPropertyChange" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddObjectPropertyDomain" -> "base:ObjectPropertyDomainChange" [ label = "rdfs:subClassOf" ];
	"base:AddObjectPropertyDomain" -> "base:AddDomain" [ label = "rdfs:subClassOf" ];
	"base:SymmetricObjectPropertyChange" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:DisjointUnionChange" -> "base:ClassChange" [ label = "rdfs:subClassOf" ];
	"base:AsymmetricObjectPropertyChange" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddSymmetricObjectProperty" -> "base:SymmetricObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddSymmetricObjectProperty" -> "base:AddObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:AddEquivalentObjectProperty" -> "base:EquivalentObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddEquivalentObjectProperty" -> "base:AddObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:DataPropertyRangeChange" -> "base:DataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveReflexiveObjectProperty" -> "base:RemoveObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:RemoveReflexiveObjectProperty" -> "base:ReflexiveObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:InverseObjectPropertyChange" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveDisjointClass" -> "base:DisjointClassChange" [ label = "rdfs:subClassOf" ];
	"base:AddDisjointUnion" -> "base:DisjointUnionChange" [ label = "rdfs:subClassOf" ];
	"base:DisjointClassChange" -> "base:ClassChange" [ label = "rdfs:subClassOf" ];
	"base:ObjectPropertyDomainChange" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveAsymmetricObjectProperty" -> "base:RemoveObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:RemoveAsymmetricObjectProperty" -> "base:AsymmetricObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddObjectProperty" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddObjectProperty" -> "base:AddProperty" [ label = "rdfs:subClassOf" ];
	"base:RemoveFunctionalObjectProperty" -> "base:FunctionalObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveDataPropertyDomain" -> "base:RemoveDomain" [ label = "rdfs:subClassOf" ];
	"base:RemoveDataPropertyDomain" -> "base:DataPropertyDomainChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveDomain" -> "base:DomainChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveObjectProperty" -> "base:RemoveProperty" [ label = "rdfs:subClassOf" ];
	"base:RemoveObjectProperty" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveDisjointUnion" -> "base:DisjointUnionChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveDisjointObjectProperty" -> "base:RemoveObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:RemoveDisjointObjectProperty" -> "base:DisjointObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddDataPropertyRange" -> "base:DataPropertyRangeChange" [ label = "rdfs:subClassOf" ];
	"base:AddDataPropertyRange" -> "base:AddRange" [ label = "rdfs:subClassOf" ];
	"base:RemoveDisjointDataProperty" -> "base:DisjointDataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddRange" -> "base:RangeChange" [ label = "rdfs:subClassOf" ];
	"base:AddFunctionalObjectProperty" -> "base:FunctionalObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddFunctionalObjectProperty" -> "base:AddProperty" [ label = "rdfs:subClassOf" ];
	"base:AddDisjointObjectProperty" -> "base:DisjointObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddDisjointObjectProperty" -> "base:AddProperty" [ label = "rdfs:subClassOf" ];
	"base:EquivalentDataPropertyChange" -> "base:DataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveRange" -> "base:RangeChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveSubPropertyOf" -> "base:SubPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddReflexiveObjectProperty" -> "base:ReflexiveObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddReflexiveObjectProperty" -> "base:AddObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:DeprecateElement" -> "base:ElementChange" [ label = "rdfs:subClassOf" ];
	"base:ObjectPropertyChange" -> "base:PropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RenameElement" -> "base:ElementChange" [ label = "rdfs:subClassOf" ];
	"base:AddDataProperty" -> "base:DataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddDataProperty" -> "base:AddProperty" [ label = "rdfs:subClassOf" ];
	"base:RemoveEquivalentClass" -> "base:EquivalentClassChange" [ label = "rdfs:subClassOf" ];
	"base:AddObjectPropertyRange" -> "base:ObjectPropertyRangeChange" [ label = "rdfs:subClassOf" ];
	"base:AddObjectPropertyRange" -> "base:AddRange" [ label = "rdfs:subClassOf" ];
	"base:RemoveInverseFunctionalObjectProperty" -> "base:RemoveObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:RemoveInverseFunctionalObjectProperty" -> "base:InverseFunctionalObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:DatatypeChange" -> "base:DataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:AddDatatype" -> "base:DatatypeChange" [ label = "rdfs:subClassOf" ];
	"base:DisjointObjectPropertyChange" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveDataProperty" -> "base:RemoveProperty" [ label = "rdfs:subClassOf" ];
	"base:RemoveDataProperty" -> "base:DataPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:IrreflexiveObjectPropertyChange" -> "base:ObjectPropertyChange" [ label = "rdfs:subClassOf" ];
	"base:PropertyChange" -> "base:OntologyChange" [ label = "rdfs:subClassOf" ];
	"base:RemoveInverseObjectProperty" -> "base:RemoveObjectProperty" [ label = "rdfs:subClassOf" ];
	"base:RemoveInverseObjectProperty" -> "base:InverseObjectPropertyChange" [ label = "rdfs:subClassOf" ];

}
